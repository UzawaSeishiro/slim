/*
 *  react_rule.lmn - React Rule module
 *  Author: Yutaro Tsunekawa, Taichi Tomioka, Nozomi Matsuzawa
 *
 *   Copyright (c) 2016, Ueda Laboratory LMNtal Group <lmntal@ueda.info.waseda.ac.jp>
 *   All rights reserved.
 *
 *   Redistribution and use in source and binary forms, with or without
 *   modification, are permitted provided that the following conditions are
 *   met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in
 *       the documentation and/or other materials provided with the
 *       distribution.
 *
 *    3. Neither the name of the Ueda Laboratory LMNtal Group nor the
 *       names of its contributors may be used to endorse or promote
 *       products derived from this software without specific prior
 *       written permission.
 *
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

{
  module(react_rule).

  /*
   * Ret = react_rule.react(Rule, Graph, RetRule)
   * ルールを一回適用した結果を得る
   *
   * Ret:     successアトムにRuleをGraphに適用した後の膜が接続されたもの. 適用できなければfailアトムにGraphと同じ膜が接続されたもの
   * Graph:   適用したいプロセスが入った膜.
   * Rule:    適用したいルールが入っている膜. 複数ある場合はどれか一つが非決定的に選ばれる
   * RetRule: Ruleと同じ膜
   */
  Ret = react_rule.react(Rule, Graph, RetRule) :- Ret = '$callback'('cb_react_rule', Rule, Graph, RetRule).

  /*
   * Ret = react_rule.react_nd(Rule, Graph, RetRule)
   * ルールセットを一回適用したとき起こりうるすべての結果を得る
   *
   * Ret:     RuleをGraphに一回適用したときにあり得る書き換え後の状態を表す膜のリスト. 適用できなければ空リストが返る
   * Graph:   適用したいプロセスが入った膜.
   * Rule:    適用したいルールセットが入っている膜.
   * RetRule: Ruleと同じ膜
   */
  Ret = react_rule.react_nd(Rule, Graph, RetRule) :- Ret = '$callback'('cb_react_ruleset_nd', Rule, Graph, RetRule).
}.
