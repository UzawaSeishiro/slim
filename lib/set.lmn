{
    module(set).

    Ret = set.init :- Ret = set.empty.

    set.free(Set) :- class(Set, "hash") | '$callback'('cb_set_free', Set).

    Ret = set.insert(Set, Val) :- class(Set, "hash") | '$callback'('cb_set_put', Set, Val, Ret).

    Ret = set.insert(set.empty, Val) :- '$callback'('cb_set_put', set.empty, Val, Ret).

    Ret = set.find(set.empty, Val, Res) :- '$callback'('cb_set_get', set.empty, Val, Res, Ret).

    Ret = set.find(Set, Val, Res) :- class(Set, "hash") | '$callback'('cb_set_get', Set, Val , Res, Ret).

    Ret = set.intersect(Set0, Set1) :- class(Set0, "hash"), class(Set1, "hash") |
	'$callback'('cb_set_intersect', Set0, Set1, Ret).

    Ret = set.intersect(Set, set.empty) :- Ret = set.empty.

    Ret = set.intersect(set.empty, Set) :- Ret = set.empty.

    Ret = set.union(Set0, Set1) :- class(Set0, "hash"), class(Set1, "hash") |
	'$callback'('cb_set_union', Set0, Set1, Ret).

    Ret = set.union(Set, set.empty) :- Ret = Set.

    Ret = set.union(set.empty, Set) :- Ret = Set.
}
