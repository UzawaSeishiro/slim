Compiled Ruleset @602 
Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 1]
		jump           [L267, [0], [], []]
	--guard:L267:
		spec           [1, 1]
		jump           [L260, [0], [], []]
	--body:L260:
		spec           [1, 6]
		commit         ["_init", 0]
		newmem       [1, 0, 0]
		loadruleset    [1, @601]
		newatom      [2, 1, 'array2D'_1]
		newatom      [3, 1, 'module'_1]
		alloclink    [4, 2, 0]
		alloclink    [5, 3, 0]
		unifylinks     [4, 5, 1]
		proceed        []


Compiled Ruleset @601     
Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 13]
		findatom     [1, 0, 'array2D'.'new'_4]
		derefatom    [3, 1, 1]
		isint          [3]
		derefatom    [2, 1, 0]
		isint          [2]
		imul         [4, 2, 3]
		getfunc      [5, 4]
		allocatomindirect[6, 5]
		commit         ["_Resa", 0]
		removeatom     [1, 0, 'array2D'.'new'_4]
		removeatom     [2, 0]
		removeatom     [3, 0]
		copyatom     [7, 0, 6]
		copyatom     [8, 0, 2]
		copyatom     [9, 0, 3]
		newatom      [10, 0, 'cb_array_new'_1]
		newatom      [11, 0, '$callback'_4]
		newatom      [12, 0, 'array2D'_4]
		newlink        [10, 0, 11, 0, 0]
		newlink        [11, 1, 7, 0, 0]
		relink         [11, 2, 1, 2, 0]
		newlink        [11, 3, 12, 2, 0]
		newlink        [12, 0, 8, 0, 0]
		newlink        [12, 1, 9, 0, 0]
		relink         [12, 3, 1, 3, 0]
		callback       [0, 11]
		freeatom       [1]
		freeatom       [6]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'array2D'_4]
		derefatom    [7, 1, 1]
		isint          [7]
		derefatom    [6, 1, 0]
		isint          [6]
		derefatom    [4, 1, 2]
		getclass     [5, 4]
		allocatom    [3, "array"_1]
		subclass       [5, 3]
		deref        [2, 1, 3, 0]
		func           [2, 'array2D'.'free'_1]
		commit         ["_arra", 0]
		removeatom     [1, 0, 'array2D'_4]
		removeatom     [2, 0, 'array2D'.'free'_1]
		removeatom     [6, 0]
		removeatom     [7, 0]
		removeatom     [4, 0]
		copyatom     [8, 0, 4]
		newatom      [9, 0, 'cb_array_free'_1]
		newatom      [10, 0, '$callback'_2]
		newlink        [9, 0, 10, 0, 0]
		newlink        [10, 1, 8, 0, 0]
		callback       [0, 10]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [6]
		freeatom       [7]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 15]
		findatom     [1, 0, 'array2D'_4]
		derefatom    [7, 1, 1]
		isint          [7]
		derefatom    [6, 1, 0]
		isint          [6]
		derefatom    [4, 1, 2]
		getclass     [5, 4]
		allocatom    [3, "array"_1]
		subclass       [5, 3]
		deref        [2, 1, 3, 0]
		func           [2, 'array2D'.'size'_3]
		commit         ["_arra", 0]
		removeatom     [1, 0, 'array2D'_4]
		removeatom     [2, 0, 'array2D'.'size'_3]
		removeatom     [6, 0]
		removeatom     [7, 0]
		removeatom     [4, 0]
		copyatom     [8, 0, 6]
		copyatom     [9, 0, 6]
		copyatom     [10, 0, 7]
		copyatom     [11, 0, 7]
		copyatom     [12, 0, 4]
		newatom      [13, 0, ','_3]
		newatom      [14, 0, 'array2D'_4]
		newlink        [13, 0, 8, 0, 0]
		newlink        [13, 1, 10, 0, 0]
		relink         [13, 2, 2, 1, 0]
		newlink        [14, 0, 9, 0, 0]
		newlink        [14, 1, 11, 0, 0]
		newlink        [14, 2, 12, 0, 0]
		relink         [14, 3, 2, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [6]
		freeatom       [7]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 21]
		findatom     [1, 0, 'array2D'_4]
		derefatom    [11, 1, 0]
		isint          [11]
		derefatom    [6, 1, 1]
		isint          [6]
		derefatom    [4, 1, 2]
		getclass     [5, 4]
		allocatom    [3, "array"_1]
		subclass       [5, 3]
		deref        [2, 1, 3, 0]
		func           [2, 'array2D'.'get'_5]
		derefatom    [9, 2, 2]
		isint          [9]
		derefatom    [7, 2, 1]
		isint          [7]
		imul         [8, 6, 7]
		iadd         [10, 8, 9]
		getfunc      [12, 10]
		allocatomindirect[13, 12]
		commit         ["_arra", 0]
		removeatom     [1, 0, 'array2D'_4]
		removeatom     [2, 0, 'array2D'.'get'_5]
		removeatom     [7, 0]
		removeatom     [9, 0]
		removeatom     [11, 0]
		removeatom     [6, 0]
		removeatom     [4, 0]
		copyatom     [14, 0, 13]
		copyatom     [15, 0, 11]
		copyatom     [16, 0, 6]
		copyatom     [17, 0, 4]
		newatom      [18, 0, 'cb_array_get'_1]
		newatom      [19, 0, '$callback'_5]
		newatom      [20, 0, 'array2D'_4]
		newlink        [18, 0, 19, 0, 0]
		newlink        [19, 1, 17, 0, 0]
		newlink        [19, 2, 14, 0, 0]
		relink         [19, 3, 2, 3, 0]
		newlink        [19, 4, 20, 2, 0]
		newlink        [20, 0, 15, 0, 0]
		newlink        [20, 1, 16, 0, 0]
		relink         [20, 3, 2, 4, 0]
		callback       [0, 19]
		freeatom       [1]
		freeatom       [2]
		freeatom       [10]
		freeatom       [7]
		freeatom       [8]
		freeatom       [9]
		freeatom       [3]
		freeatom       [13]
		freeatom       [11]
		freeatom       [6]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 21]
		findatom     [1, 0, 'array2D'_4]
		derefatom    [11, 1, 0]
		isint          [11]
		derefatom    [6, 1, 1]
		isint          [6]
		derefatom    [4, 1, 2]
		getclass     [5, 4]
		allocatom    [3, "array"_1]
		subclass       [5, 3]
		deref        [2, 1, 3, 0]
		func           [2, 'array2D'.'put'_5]
		derefatom    [9, 2, 2]
		isint          [9]
		derefatom    [7, 2, 1]
		isint          [7]
		imul         [8, 6, 7]
		iadd         [10, 8, 9]
		getfunc      [12, 10]
		allocatomindirect[13, 12]
		commit         ["_arra", 0]
		removeatom     [1, 0, 'array2D'_4]
		removeatom     [2, 0, 'array2D'.'put'_5]
		removeatom     [7, 0]
		removeatom     [9, 0]
		removeatom     [11, 0]
		removeatom     [6, 0]
		removeatom     [4, 0]
		copyatom     [14, 0, 13]
		copyatom     [15, 0, 11]
		copyatom     [16, 0, 6]
		copyatom     [17, 0, 4]
		newatom      [18, 0, 'cb_array_put'_1]
		newatom      [19, 0, '$callback'_5]
		newatom      [20, 0, 'array2D'_4]
		newlink        [18, 0, 19, 0, 0]
		newlink        [19, 1, 17, 0, 0]
		newlink        [19, 2, 14, 0, 0]
		relink         [19, 3, 2, 3, 0]
		newlink        [19, 4, 20, 2, 0]
		newlink        [20, 0, 15, 0, 0]
		newlink        [20, 1, 16, 0, 0]
		relink         [20, 3, 2, 4, 0]
		callback       [0, 19]
		freeatom       [1]
		freeatom       [2]
		freeatom       [8]
		freeatom       [7]
		freeatom       [9]
		freeatom       [13]
		freeatom       [3]
		freeatom       [11]
		freeatom       [6]
		freeatom       [4]
		freeatom       [10]
		proceed        []


Module
'array2D' {@601}
Inline
