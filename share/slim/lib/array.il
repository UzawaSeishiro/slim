Compiled Ruleset @602 
Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 1]
		jump           [L334, [0], [], []]
	--guard:L334:
		spec           [1, 1]
		jump           [L327, [0], [], []]
	--body:L327:
		spec           [1, 6]
		commit         ["_init", 0]
		newmem       [1, 0, 0]
		loadruleset    [1, @601]
		newatom      [2, 1, 'array'_1]
		newatom      [3, 1, 'module'_1]
		alloclink    [4, 2, 0]
		alloclink    [5, 3, 0]
		unifylinks     [4, 5, 1]
		proceed        []


Compiled Ruleset @601        
Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'array'.'new'_3]
		derefatom    [2, 1, 0]
		isint          [2]
		commit         ["_Resa", 0]
		removeatom     [1, 0, 'array'.'new'_3]
		removeatom     [2, 0]
		copyatom     [3, 0, 2]
		newatom      [4, 0, 'cb_array_new'_1]
		newatom      [5, 0, '$callback'_4]
		newlink        [4, 0, 5, 0, 0]
		newlink        [5, 1, 3, 0, 0]
		relink         [5, 2, 1, 1, 0]
		relink         [5, 3, 1, 2, 0]
		callback       [0, 5]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'array'.'new'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		derefatom    [3, 2, 0]
		isunary        [3]
		commit         ["_Resa", 0]
		removeatom     [1, 0, 'array'.'new'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0]
		copyatom     [4, 0, 3]
		copyatom     [5, 0, 3]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'list'.'length'_3]
		newatom      [8, 0, 'array'.'new'_3]
		newatom      [9, 0, 0_1]
		newatom      [10, 0, 'array'.'fill'_4]
		newlink        [6, 0, 4, 0, 0]
		relink         [6, 1, 2, 1, 0]
		newlink        [6, 2, 7, 0, 0]
		newlink        [7, 1, 8, 0, 0]
		newlink        [7, 2, 10, 1, 0]
		newlink        [8, 1, 5, 0, 0]
		newlink        [8, 2, 10, 0, 0]
		newlink        [9, 0, 10, 2, 0]
		relink         [10, 3, 1, 1, 0]
		loadmodule     [0, "list"]
		loadmodule     [0, "array"]
		loadmodule     [0, "array"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'array'.'fill'_4]
		derefatom    [3, 1, 2]
		isint          [3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Resa", 0]
		removeatom     [1, 0, 'array'.'fill'_4]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		unify          [1, 3, 1, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'array'.'fill'_4]
		derefatom    [4, 1, 2]
		isint          [4]
		allocatom    [3, 1_1]
		iadd         [5, 4, 3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		commit         ["_Resa", 0]
		removeatom     [1, 0, 'array'.'fill'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		copyatom     [6, 0, 4]
		copyatom     [7, 0, 5]
		newatom      [8, 0, 'array'.'put'_4]
		newatom      [9, 0, 'array'.'fill'_4]
		relink         [8, 0, 1, 0, 0]
		newlink        [8, 1, 6, 0, 0]
		relink         [8, 2, 2, 0, 0]
		newlink        [8, 3, 9, 0, 0]
		relink         [9, 1, 2, 1, 0]
		newlink        [9, 2, 7, 0, 0]
		relink         [9, 3, 1, 3, 0]
		loadmodule     [0, "array"]
		loadmodule     [0, "array"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 3]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'array'.'free'_1]
		derefatom    [3, 1, 0]
		getclass     [4, 3]
		allocatom    [2, "array"_1]
		subclass       [4, 2]
		commit         ["_arra", 0]
		removeatom     [1, 0, 'array'.'free'_1]
		removeatom     [3, 0]
		copyatom     [5, 0, 3]
		newatom      [6, 0, 'cb_array_free'_1]
		newatom      [7, 0, '$callback'_2]
		newlink        [6, 0, 7, 0, 0]
		newlink        [7, 1, 5, 0, 0]
		callback       [0, 7]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'array'.'size'_3]
		commit         ["_arra", 0]
		removeatom     [1, 0, 'array'.'size'_3]
		newatom      [2, 0, 'cb_array_size'_1]
		newatom      [3, 0, '$callback'_4]
		newlink        [2, 0, 3, 0, 0]
		relink         [3, 1, 1, 0, 0]
		relink         [3, 2, 1, 1, 0]
		relink         [3, 3, 1, 2, 0]
		callback       [0, 3]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'array'.'get'_4]
		derefatom    [5, 1, 1]
		isint          [5]
		derefatom    [3, 1, 0]
		getclass     [4, 3]
		allocatom    [2, "array"_1]
		subclass       [4, 2]
		commit         ["_arra", 0]
		removeatom     [1, 0, 'array'.'get'_4]
		removeatom     [5, 0]
		removeatom     [3, 0]
		copyatom     [6, 0, 5]
		copyatom     [7, 0, 3]
		newatom      [8, 0, 'cb_array_get'_1]
		newatom      [9, 0, '$callback'_5]
		newlink        [8, 0, 9, 0, 0]
		newlink        [9, 1, 7, 0, 0]
		newlink        [9, 2, 6, 0, 0]
		relink         [9, 3, 1, 2, 0]
		relink         [9, 4, 1, 3, 0]
		callback       [0, 9]
		freeatom       [1]
		freeatom       [5]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'array'.'put'_4]
		derefatom    [5, 1, 1]
		isint          [5]
		derefatom    [3, 1, 0]
		getclass     [4, 3]
		allocatom    [2, "array"_1]
		subclass       [4, 2]
		commit         ["_arra", 0]
		removeatom     [1, 0, 'array'.'put'_4]
		removeatom     [5, 0]
		removeatom     [3, 0]
		copyatom     [6, 0, 5]
		copyatom     [7, 0, 3]
		newatom      [8, 0, 'cb_array_put'_1]
		newatom      [9, 0, '$callback'_5]
		newlink        [8, 0, 9, 0, 0]
		newlink        [9, 1, 7, 0, 0]
		newlink        [9, 2, 6, 0, 0]
		relink         [9, 3, 1, 2, 0]
		relink         [9, 4, 1, 3, 0]
		callback       [0, 9]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [3]
		proceed        []


Module
'array' {@601}
Inline
